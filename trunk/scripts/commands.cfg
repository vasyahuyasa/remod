//simple commands are here

//usage_cmd_test = [result "test [cn] [int] (bool) (str)"]
//cmd_test = [
//	echo (concat "not_String_params:" $arg2) 
//	echo (concat "String_params:" $arg3)
//	pm $arg2 (format "(PM) %1(%2): %3 - %4 - %5 - %6 " (getname $arg1) $arg1 (at $arg2 0) (at $arg2 1) (at $arg2 2) $arg3 )
//	result -1 //set it when usage error
//	result -2 //set it when permission error
//]
//registercommand "test" cmd_test "ci|bs" 1 //4 parameters are passed to command #test. c - cn, i - integer, b - boolean, s - string (command "#test 0 0 0 remod forever" is  valid)
////parameters after | are not obligatory ("#test 0 0" also works). string parameter must be the last
// 1 - command allowed for all players, 2 - for masters and admins, 3 -  for admins only

usage_cmd_help = [ result "^help (command) ^f1Shows info about command or list of server commands"]
cmd_help = [
	if (=s $arg3 "") [
		res = ""
		loop i (listlen $commands) [   
			// checking for permissions
			cmd_permission = (at $command_permissions $i)
			perm_ok = 0
			
			if (= $cmd_permission 1) [  // all players
				perm_ok = 1
			] [
				if (= $cmd_permission 2) [ // for masters and admins
				perm_ok = (ismaster $arg1)
				] [ // for admins only					
					perm_ok = (isadmin $arg1)
				]
			]			
			
			if $perm_ok [ // player can use command
				res = (concatword $res " #" (at $commands $i)) 	
			]
		]
		pm $arg1 (format "^f1Server commands:^f0%1" $res) 
	] [
		pm $arg1 (usage (concatword "cmd_" $arg3))
	]
]
registercommand "help" cmd_help "|s" 1 //string parameter can be empty



usage_cmd_pm = [result "pm [cn] [message] ^f1Sends private message to user"]
cmd_pm = [
	pm $arg2 (format "^f1(private) %1(%2): ^f3%3" (getname $arg1) $arg1 $arg3)
]
registercommand "pm" cmd_pm "cs" 1 //parameters are passed to pm are cn and string, both of these params are obligatory


usage_cmd_persist = [result "persist [1|0] ^f1Persists teams"]
cmd_persist = [
	if (=s $arg2 "") [ 
		say (concatword "^f1Shuffle teams is " (? $persist "disabled" "enabled" ))		
	] [
		persist $arg2	
		say (concatword "^f1Shuffle teams is " (? $persist "disabled" "enabled" ))	
	]
]
registercommand "persist" cmd_persist "|b" 2



usage_cmd_specall = [result "specall [1|0] ^f1Spectate or unspectate all players"]
cmd_specall = [
	all = (allplayers)
	looplist cn $all [	
		spectator $arg2 $cn
	]
	say (concatword "^f1All players were " (? $arg2 "spectated" "unspectated" ))
]
registercommand "specall" cmd_specall "b" 2



usage_cmd_restart = [result "restart ^f1Restart current game"]
cmd_restart = [
	(map (getmap))
	say ("^f1Game was restarted")
]
registercommand "restart" cmd_restart "" 2



usage_cmd_getip = [result "getip [cn] ^f1Show player's ip"]
cmd_getip = [
	say (format "^f1Ip of ^f7%1^f5(%2) ^f1is ^f0%3" (getname $arg2) $arg2 (getip $arg2))
]
registercommand "getip" cmd_getip "c" 2



usage_cmd_version = [result "version ^f1Server's version"]
cmd_version = [
	say (format "^f1Software version: ^f7%1" (version))
]
registercommand "version" cmd_version "" 1


//mute player
usage_cmd_mute = [result "mute [cn] [0|1] ^f1Mute player"]
cmd_mute = [
	cn = (at $arg2 0)
	muted = (at $arg2 1)
	
	// if without [0|1] 
	if (=s $muted "") [ muted = 1 ]

	if (= (ismuted $cn) $muted) [
		pm $arg1 (format "^f1Player ^f7%1^f5(%2)^f1 is already %3" (getname $cn) $cn (? $muted "muted" "unmuted"))
	] [
		mute $cn $muted
		say (format "^f1Player ^f7%1^f5(%2)^f1 was ^f3%3" (getname $cn) $cn (? $muted "muted" "unmuted"))
		if (= $muted 1) [
			pm $cn "^f1You was ^f3muted^f1. Nobody hears your scream"
		] [
			pm $cn "^f1You was ^f0unmuted^f1. Please be polite"
		]
	]
]
registercommand "mute" cmd_mute "c|b" 2


//time
usage_cmd_time = [result "time [min] ^f1Time limit for current round"]
cmd_time = [ 
	//здесь не нужно валидацию делать, параметры при вызове команды проверяются , для того параметр "i" и указывается
	newtime = (* $arg2 60000)
	//echo $newtime   //debug
	//say (format "newtime = %1" $newtime)
	if (> $newtime 0 ) [
		setroundtime (+ $gamemillis $newtime )
		say (yellow (format "Time limit set to ^f0%1^f2 min"  $arg2))
	]	
]

registercommand "time" cmd_time "i" 2
