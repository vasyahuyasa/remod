// Some general database stuff

//register database
// db_register  $engine $conenction_string $name
// engine
// connection string  (login:password@server:port/database_name  for postgres and mysql  or path/to/file.db for sqlite)
// name - name of database ("default" for default database)
// db_register  "sqlite" "base.db" "default"
db_register = [
	if (|| (&& (=s $arg1 "sqlite") (getalias "sqlite3_connect")) (&& (=s $arg1 "mysql") (getalias "mysql_connect"))) [
		name = (getvalue (getalias "arg3") "default")
		alias (concatword "db__engine_" $name) $arg1
		alias (concatword "db__str_" $name) $arg2
		alias (concatword "db__dbuid_" $name "_0") "-1"
		
		echo (format "Registered database '%1' %2://%3" $name $arg1 $arg2)
	] [
		echo (format "ERROR: Engine %1 not compiled" $arg1)
	]
]

//get registered database engine
// db_get_engine $name
// db_get_engine "default"
db_get_engine = [
	name = (getvalue (getalias "arg1") "default")
	result (getalias (concatword "db__engine_" $name))
]

//get registered database connection string
// db_get_connstr $name
// db_get_connstr "default"
db_get_connstr = [
	name = (getvalue (getalias "arg1") "default")
	result (getalias (concatword "db__str_" $name))
]


//get connection dbuid
// db_get_dbuid $name $slot
// db_get_dbuid "default" 0
db_get_dbuid = [
	name = (getvalue (getalias "arg1") "default")
	slot = (getvalue (getalias "arg2") "0")
	dbuid_var = (concatword "db__dbuid_" $name "_" $slot)
	result (getalias $dbuid_var)
]

//checks if connection dbuid with specified slot is correct. if no - prints error message
// db_check_dbuid $name $slot
// db_check_dbuid "default" 0
db_check_dbuid = [
	name = (getvalue (getalias "arg1") "default")
	slot = (getvalue (getalias "arg2") "0")
	dbuid_var = (concatword "db__dbuid_" $name "_" $slot)
	dbuid = (getalias $dbuid_var)
	
	if (= $dbuid -1) [
		db_print_error $name "could not initialize connection"
	]
]

//set dbuid
// db_set_dbuid $dbuid $name $slot 
// db_set_dbuid $dbuid "default" 0 
db_set_dbuid = [
	name = (getvalue (getalias "arg2") "default")
	slot = (getvalue (getalias "arg3") "0")
	dbuid_var = (concatword "db__dbuid_" $name "_" $slot)
	alias $dbuid_var $arg1
	
	echo (format "Setting dbuid %1 to %2" $arg1 (concatword "db__str_" $name "_" $slot)) 
]

//print error
// db_print_error $message $name
// db_print_error "database was stolen by Cthulhu" "default"
db_print_error = [
	name = (getvalue (getalias "arg2") "default")
	echo  (format "Error in %2 database '%1': %3" $name (db_get_engine $name) $arg1))
]

// get database error message and print it
// db_error $name $slot 
// db_error "default" 0 
db_error = [
	name = (getvalue (getalias "arg1") "default")
	slot = (getvalue (getalias "arg2") "0")
	engine = (db_get_engine $name)
	dbuid = (db_get_dbuid $name $slot)
	
	e = 0
	cases $engine "sqlite3" [
		e = (sqlite3_error $dbuid)
	] "mysql" [
		e = (mysql_error $dbuid)
	] () [
	]
	if $e [
		db_print_error $e $name
	]
]

// open connection to db
// db_open $name $slot
// db_open "default" 0
db_open = [
	name = (getvalue (getalias "arg1") "default")
	slot = (getvalue (getalias "arg2") "0")
	engine = (db_get_engine $name)
	connection_str = (db_get_connstr $name)
	
	dbuid = -1
	cases $engine "sqlite3" [
		dbuid = (sqlite3_open $connection_str)
	] "mysql" [ 
		dbuid = (mysql_open $connection_str)
	] () [ // default
		echo (concatword "db error: unknown db engine " $name)
	]
	result $dbuid
]



// initialize database connection  
// if connection is not already open - open it
// db_init $name $slot
// db_init "default" 0
db_init = [
	name = (getvalue (getalias "arg1") "default")
	slot = (getvalue (getalias "arg2") "0")
	engine = (db_get_engine $name)
	connection_str = (db_get_connstr $name)
	dbuid = (db_get_dbuid $name $slot)
	
	if (= $dbuid -1) [
		cases $engine "sqlite3" [
			db_set_dbuid (sqlite3_open $connection_str) $name $slot
		] "mysql" [ 
			db_set_dbuid (mysql_open $connection_str) $name $slot
		] () [ 
			echo (concatword "db error: unknown db engine " $name)
		]
		echo (format "Connected to database '%1' %2://%3" $name $engine $connection_str)
		db_check_dbuid $arg1 $arg2
	]
]

// execute sql query
// db_query $query $name $slot
// db_query "select * from table where id=1 and name='123'" "default"  0
db_query = [
	engine = (db_get_engine $arg2)
	dbuid = (db_get_dbuid $arg2 $arg3)
	
	cases $engine "sqlite3" [
		result (sqlite3_query $dbuid $arg1)
	] "mysql" [
		result (mysql_query $dbuid $arg1)
	] () [ // default
	]
]


// execute sql query with filtering parameters
// db_pquery $query $parameters $name $slot
// db_query "select * from table where id=:0 and name=':1'" "1123 supername" "default"  0
db_pquery = [
	engine = (db_get_engine $arg2)
	dbuid = (db_get_dbuid $arg2 $arg3)
	
	cases $engine "sqlite3" [
		result (sqlite3_pquery $dbuid $arg1)
	] "mysql" [
		result (mysql_pquery $dbuid $arg1)
	] () [
	]
]

// insert or replace 
// db_insert_replace $tablename $last_query $parameters $name $slot
// db_insert_replace "player" "(name) VALUES (':0')" "|RB|^o_o^" $name $slot
db_insert_replace = [
	name = (getvalue (getalias "arg4") "default")
	num = (getvalue (getalias "arg5") "0")
	
	engine = (db_get_engine $name)
	dbuid = (db_get_dbuid $name $num)
	cases $engine "sqlite3" [
		result (sqlite3_pquery $dbuid (concatword "INSERT OR REPLACE INTO " $arg1 " " $arg2) $arg3)
	] "mysql" [
		result (mysql_pquery $dbuid (concatword "REPLACE INTO " $arg1 " " $arg2) $arg3)
	] () [
	]
]


// get row
// db_getrow $query_dbuid $name
// db_getrow $query_dbuid "default" 
db_getrow = [
	engine = (db_get_engine $arg2)
	cases $engine "sqlite3" [
		result (sqlite3_getrow $arg1)
	] "mysql" [
		result (mysql_getrow $arg1)
	] () [
	]
]

// finalize result
// db_finalize $query_dbuid $name
// db_finalize $query_dbuid "default" 
db_finalize = [
	engine = (db_get_engine $arg2)
	cases $engine "sqlite3" [
		result (sqlite3_finalize $arg1)
	] "mysql" [
		result (mysql_finalize $arg1)
	] () [
	]
]


// close database
// db_close $name $slot
// db_close "default"  0
db_close = [
	engine = (db_get_engine $arg1)
	dbuid = (db_get_dbuid $arg1 $arg2)
	
	cases $engine "sqlite3" [
		result (sqlite3_close $dbuid)
	] "mysql" [
		result (mysql_close $dbuid)
	] () [ // default
	]
]
